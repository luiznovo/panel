# G-Panel Nginx Configuration
# Configuração otimizada para produção com load balancing e SSL

# Upstream para load balancing
upstream g_panel_backend {
    # Conectar ao container da aplicação via nome do serviço Docker
    server app:3000 weight=3 max_fails=3 fail_timeout=30s;
    
    # Configurações de load balancing
    least_conn;  # Usar conexão com menos carga
    keepalive 32;  # Manter conexões ativas
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=general_limit:10m rate=30r/s;

# Cache para arquivos estáticos
proxy_cache_path /var/cache/nginx/g-panel levels=1:2 keys_zone=g_panel_cache:10m max_size=1g inactive=60m use_temp_path=off;

# Configuração principal do servidor
server {
    listen 80;
    listen [::]:80;
    server_name _;
    
    # Redirecionar HTTP para HTTPS (quando SSL estiver configurado)
    # return 301 https://$server_name$request_uri;
    
    # Configurações de segurança
    server_tokens off;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;
    
    # Configurações de logs
    access_log /var/log/nginx/g-panel-access.log combined;
    error_log /var/log/nginx/g-panel-error.log warn;
    
    # Configurações de upload
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Configurações de proxy
    proxy_connect_timeout 30s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # Headers para proxy
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Health check endpoint
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # API endpoints com rate limiting
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        limit_req_status 429;
        
        proxy_pass http://g_panel_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        
        # Timeout específico para API
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Login endpoint com rate limiting mais restritivo
    location /api/auth/login {
        limit_req zone=login_limit burst=3 nodelay;
        limit_req_status 429;
        
        proxy_pass http://g_panel_backend;
        proxy_http_version 1.1;
        
        # Log tentativas de login
        access_log /var/log/nginx/g-panel-login.log combined;
    }
    
    # WebSocket support
    location /socket.io/ {
        proxy_pass http://g_panel_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }
    
    # Arquivos estáticos com cache
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://g_panel_backend;
        proxy_cache g_panel_cache;
        proxy_cache_valid 200 302 1h;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        
        # Headers de cache
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        
        # Compressão
        gzip_static on;
    }
    
    # Arquivos de manifest e service worker
    location ~* \.(manifest|webmanifest|sw\.js)$ {
        proxy_pass http://g_panel_backend;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Bloquear acesso a arquivos sensíveis
    location ~* \.(env|log|sql|sqlite|backup|tar|gz|zip)$ {
        deny all;
        return 404;
    }
    
    # Bloquear acesso a diretórios sensíveis
    location ~ /\.(git|svn|hg) {
        deny all;
        return 404;
    }
    
    location ~ /(node_modules|logs|backups|scripts) {
        deny all;
        return 404;
    }
    
    # Página principal com rate limiting geral
    location / {
        limit_req zone=general_limit burst=50 nodelay;
        
        proxy_pass http://g_panel_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
        
        # Cache para páginas HTML
        proxy_cache g_panel_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_use_stale error timeout updating;
        proxy_cache_bypass $cookie_session $http_authorization;
        proxy_no_cache $cookie_session $http_authorization;
    }
    
    # Error pages customizadas
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/html;
        internal;
    }
    
    location = /50x.html {
        root /var/www/html;
        internal;
    }
}

# Configuração HTTPS (descomente quando SSL estiver configurado)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
#     
#     # Certificados SSL
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     
#     # Configurações SSL otimizadas
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_session_tickets off;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#     
#     # OCSP Stapling
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     ssl_trusted_certificate /etc/letsencrypt/live/your-domain.com/chain.pem;
#     resolver 8.8.8.8 8.8.4.4 valid=300s;
#     resolver_timeout 5s;
#     
#     # Incluir todas as configurações do servidor HTTP acima
#     include /etc/nginx/snippets/g-panel-common.conf;
# }

# Servidor para redirecionamento www -> non-www (quando SSL estiver configurado)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name www.your-domain.com;
#     
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     
#     return 301 https://your-domain.com$request_uri;
# }